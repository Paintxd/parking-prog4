<div
	class="modal fade"
	id="addCurrencyModal"
	tabindex="-1"
	role="dialog"
	aria-labelledby="addCurrencyModalLabel"
	aria-hidden="true"
>
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="addCurrencyModalLabel">Adicionar Saldo</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<form id="add-currency-form">
					<p id="add-currency-form-error"></p>
					<label for="value"> Valor desejado:</label>
					<input
						type="number"
						id="value"
						name="value"
						min="1"
						step="0.01"
						onkeyup="this.value = Number(this.value).toFixed(2)"
						required
					/>
					<p id="error-value"></p>

					<label for="card-number"> Numero do cartão:</label>
					<input
						type="text"
						id="card-number"
						name="creditCardNumber"
						size="20"
						onkeyup="validateCardNumber(this.value)"
						required
					/>
					<p id="notice"></p>
					<p id="error-creditCardNumber"></p>

					<label for="cvv"> CVV:</label>
					<input
						type="text"
						id="cvv"
						name="creditCardCvv"
						maxlength="3"
						minlength="3"
						required
					/>
					<p id="error-creditCardCvv"></p>

					<label for="expiration-date"> Data de expiração:</label>
					<input type="month" id="expiration-date" name="creditCardExpiration" required />
					<p id="error-creditCardExpiration"></p>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-primary" onclick="depositCurrency()">
					Adicionar
				</button>
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
			</div>
		</div>
	</div>
</div>

<script>
	const validateCardNumber = (cardNum) => {
		const cardnumber = cardNum.replace(/[ -]/g, '');
		const noticeElement = $('#notice');

		const match =
			/^(?:(4[0-9]{12}(?:[0-9]{3})?)|(5[1-5][0-9]{14})|(6(?:011|5[0-9]{2})[0-9]{12})|(3[47][0-9]{13})|(3(?:0[0-5]|[68][0-9])[0-9]{11})|((?:2131|1800|35[0-9]{3})[0-9]{11}))$/.exec(
				cardnumber,
			);

		if (!match) {
			noticeElement.text('(invalid card number)');
			noticeElement.addClass('text-danger');
		}

		const types = ['Visa', 'MasterCard', 'Discover', 'American Express', 'Diners Club', 'JCB'];

		for (let i = 1; i < match.length; i++) {
			if (match[i]) {
				noticeElement.text(types[i - 1]);
				break;
			}
		}
	};

	const depositCurrency = () => {
		const value = Number($('#value').val());
		const creditCardNumber = $('#card-number').val();
		const creditCardCvv = $('#cvv').val();
		const creditCardExpiration = $('#expiration-date').val();

		$('#error-value').text('');
		$('#error-creditCardNumber').text('');
		$('#error-creditCardCvv').text('');
		$('#error-creditCardExpiration').text('');

		$.ajax({
			url: '/user/currency',
			type: 'POST',
			contentType: 'application/json',
			dataType: 'json',
			data: JSON.stringify({
				value,
				creditCardNumber,
				creditCardCvv,
				creditCardExpiration,
			}),
			success: (res) => {
				location.reload();
			},
			error: (err) => {
				formValidationError(err, 'add-currency-form');
			},
		});
	};
</script>
